generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  Account         Account[]
  jobApplications JobApplication[]
  jobPosts        JobPost[]
  roles           JobRole[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model JobRole {
  id        String    @id @default(uuid())
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  jobPosts  JobPost[]
}

model JobPost {
  id        String   @id @default(uuid())
  title     String
  caption   String
  image     String?
  roleIds   String[]
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles        JobRole[]
  applications JobApplication[]
  user         User             @relation(fields: [userId], references: [id])
}

model JobApplication {
  id         String   @id @default(uuid())
  caption    String
  resumeLink String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  jobPostId  String
  userId     String
  jobPost    JobPost? @relation(fields: [jobPostId], references: [id])
  user       User?    @relation(fields: [userId], references: [id])
}
